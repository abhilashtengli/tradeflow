// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {

id  String       @id @default(uuid())
name String
email String @unique
password String
role Role
country String     @default("India") 
product Product[]
transportation Transportation[] 
createdAt  DateTime @default(now())
updatedAt  DateTime @updatedAt
}

model UserTransporter {
  id String @id @default(uuid())
  name String
  email String @unique
  password String
  role String  @default("transporter")
  companyName String?
  country String?
  transportation Transportation[] 
  companyAddres  String?
}

model Product{

  id          String       @id @default(uuid())
  name        String
  description String
  category    String
  quantity    Int
  price       Float
  user        User      @relation(fields: [userId], references: [id])
  userId      String 
  country     String    // Country of origin or where it's available
  isAvailable Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum Role {
  Buyer
  Seller
}

model Transportation {
  id             String       @id @default(uuid())
  type           String    // e.g., "Truck", "Rail", "Air"
  origin         String    // Pickup location
  destination    String    // Port or destination location
  distance       String
  price          Float
  user           User      @relation(fields: [userId], references: [id])
  userId         String       // Foreign key to track which user booked the transport
  transporter    UserTransporter   @relation( fields: [transporterId], references: [id])
  transporterId  String
  dispatched     Boolean
  delivered      Boolean
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}